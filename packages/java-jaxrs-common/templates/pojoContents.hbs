{{>nestedModels}}
{{#if additionalProperties}}
private {{{additionalProperties.nativeType}}} additionalProperties = new {{{additionalProperties.nativeType.concreteType}}}();
{{/if}}
{{#each properties}}
private {{>frag/pojoPropertyType}} {{identifier name}}{{#if initialValue}} = {{{initialValue.literalValue}}}{{/if}};
{{/each}}

{{#if additionalProperties}}
@com.fasterxml.jackson.annotation.JsonAnyGetter
public {{{additionalProperties.nativeType}}} getAdditionalProperties() {
	return additionalProperties;
}

public {{{additionalProperties.component.nativeType}}} getAdditionalProperty(java.lang.String name) {
	if (additionalProperties != null) {
		return additionalProperties.get(name);
	} else {
		return null;
	}
}

@com.fasterxml.jackson.annotation.JsonAnySetter
public void putAdditionalProperty(java.lang.String name, {{{additionalProperties.component.nativeType}}} value) {
	additionalProperties().put(name, value);
}

public void setAdditionalProperties({{{additionalProperties.nativeType}}} additionalProperties) {
	this.additionalProperties = additionalProperties;
}

public {{{additionalProperties.nativeType}}} additionalProperties() {
	if (additionalProperties == null) {
		additionalProperties = new {{{additionalProperties.nativeType.concreteType}}}();
	}
	return additionalProperties;
}

public {{{className name}}} additionalProperties({{{additionalProperties.nativeType}}} additionalProperties) {
	setAdditionalProperties(additionalProperties);
	return this;
}

{{/if}}
{{#each (inheritedProperties)}}
/**
 {{#if description}}
 * {{description}}
 {{/if}}
 {{#if (isNumeric schema)}}
 {{#if schema.minimum}}
 * minimum: {{schema.minimum}}
 {{/if}}
 {{#if schema.maximum}}
 * maximum: {{schema.maximum}}
 {{/if}}
 {{/if}}
 */
{{#if deprecated}}
@java.lang.Deprecated
{{/if}}
@java.lang.Override
public {{className ../name}} {{identifier name}}({{{nativeType}}} {{identifier name}}) {
	set{{capitalize (identifier name)}}({{identifier name}});
	return this;
}

{{/each}}
{{#each properties}}
/**
 {{#if description}}
 * {{description}}
 {{/if}}
 {{#if (isNumeric schema)}}
 {{#if schema.minimum}}
 * minimum: {{schema.minimum}}
 {{/if}}
 {{#if schema.maximum}}
 * maximum: {{schema.maximum}}
 {{/if}}
 {{/if}}
 */
{{#if deprecated}}
@java.lang.Deprecated
{{/if}}
public {{className ../name}} {{identifier name}}({{{nativeType}}} {{identifier name}}) {
	{{#if nullable}}
	set{{capitalize (identifier name)}}(java.util.Optional.of({{identifier name}}));
	{{else}}
	set{{capitalize (identifier name)}}({{identifier name}});
	{{/if}}
	return this;
}

{{#or (isObject) (isMap) (isArray)}}
/**
 * Returns the {{identifier name}}, or if it's {@code null} it first creates a new object,
 * sets the property to the new object, and then returns it.
 */
{{#if deprecated}}
@java.lang.Deprecated
{{/if}}
public {{{nativeType}}} {{identifier name}}() {
	{{#if nullable}}
	if (this.{{identifier name}} == null || !this.{{identifier name}}.isPresent()) {
		this.{{identifier name}} = java.util.Optional.of(new {{{nativeType.concreteType}}}());
	}
	return this.{{identifier name}}.get();
	{{else}}
	if (this.{{identifier name}} == null) {
		this.{{identifier name}} = new {{{nativeType.concreteType}}}();
	}
	return this.{{identifier name}};
	{{/if}}
}

{{/or}}
{{#if deprecated}}
@java.lang.Deprecated
{{/if}}
{{#if (lookup schema.vendorExtensions 'x-extra-annotation')}}
{{{schema.vendorExtensions.x-extra-annotation}}}
{{/if}}
{{>hooks/pojoPropertyAnnotations}}
@com.fasterxml.jackson.annotation.JsonProperty("{{name}}")
{{#if @root.useBeanValidation}}
{{>beanValidation}}
{{/if}}
public {{>frag/pojoPropertyType}} {{#and (isBoolean) required (not nullable)}}is{{else}}get{{/and}}{{capitalize (identifier name)}}() {
	return this.{{identifier name}};
}
{{#if deprecated}}
@java.lang.Deprecated
{{/if}}
public void set{{capitalize (identifier name)}}({{>frag/pojoPropertyType}} {{identifier name}}) {
	this.{{identifier name}} = {{identifier name}};
}
{{#if (isArray)}}
{{#if deprecated}}
@java.lang.Deprecated
{{/if}}
public {{className ../name}} add{{capitalize (singular (identifier name))}}({{{component.nativeType}}} {{identifier (singular name)}}) {
	{{#if nullable}}
	if (this.{{identifier name}} == null || !this.{{identifier name}}.isPresent()) {
		this.{{identifier name}} = java.util.Optional.of(new {{{nativeType.concreteType}}}());
	}
	this.{{identifier name}}.get().add({{identifier (singular name)}});
	{{else}}
	if (this.{{identifier name}} == null) {
		this.{{identifier name}} = new {{{nativeType.concreteType}}}();
	}
	this.{{identifier name}}.add({{identifier (singular name)}});
	{{/if}}
	return this;
}
{{#if (isObject component)}}
{{#if deprecated}}
@java.lang.Deprecated
{{/if}}
public {{{component.nativeType}}} add{{capitalize (singular (identifier name))}}() {
	{{{component.nativeType}}} {{identifier (singular name)}} = new {{{component.nativeType.concreteType}}}();
	add{{capitalize (singular (identifier name))}}({{identifier (singular name)}});
	return {{identifier (singular name)}};
}
{{/if}}
{{/if}}

{{/each}}
@Override
public boolean equals(java.lang.Object o) {
	if (this == o) {
		return true;
	}
	if (o == null || getClass() != o.getClass()) {
		return false;
	}
	{{#if parentNativeType}}
	if (!super.equals(o)) {
		return false;
	}
	{{/if}}
	{{#if properties}}
	{{className name}} {{identifier name}} = ({{className name}}) o;
	return {{#each properties}}java.util.Objects.equals(this.{{identifier name}}, {{identifier ../name}}.{{identifier name}}){{#hasMore}}
			&& {{/hasMore}}{{/each}};
	{{else}}
	return true;
	{{/if}}
}

@Override
public int hashCode() {
	return {{#if parentNativeType}}31 * super.hashCode() + {{/if}}java.util.Objects.hash({{#each properties}}this.{{identifier name}}{{#hasMore}}, {{/hasMore}}{{/each}});
}

@Override
public java.lang.String toString() {
	java.lang.StringBuilder sb = new java.lang.StringBuilder();
	sb.append("class {{className name}} {\n");
	{{#if parentNativeType}}
	sb.append("    ").append(toIndentedString(super.toString())).append("\n");
	{{/if}}
	{{#each properties}}
	sb.append("    {{identifier name}}: ").append(toIndentedString(this.{{identifier name}})).append("\n");
	{{/each}}
	{{#if additionalProperties}}
	for (java.lang.String key : additionalProperties.keySet()) {
		sb.append("    ").append(key).append(": ").append(toIndentedString(getAdditionalProperty(key))).append("\n");
	}
	{{/if}}
	sb.append("}");
	return sb.toString();
}

/**
 * Convert the given object to string with each line indented by 4 spaces
 * (except the first line).
 */
private String toIndentedString(java.lang.Object o) {
	if (o == null) {
		return "null";
	}
	return o.toString().replace("\n", "\n    ");
}

