{{>nestedModels}}
{{#if properties}}
{{#each properties}}
private {{{nativeType}}} {{identifier name}}{{#if initialValue}} = {{{initialValue.literalValue}}}{{/if}};
{{#if (lookup ../vendorExtensions 'x-patch')}}
private boolean __patched{{capitalize (identifier name)}} = false;
{{/if}}
{{/each}}

{{#each (inheritedProperties)}}
/**
 {{#if description}}
 * {{description}}
 {{/if}}
 {{#if schema.minimum}}
 * minimum: {{schema.minimum}}
 {{/if}}
 {{#if schema.maximum}}
 * maximum: {{schema.maximum}}
 {{/if}}
 */
{{#if deprecated}}
@java.lang.Deprecated
{{/if}}
@java.lang.Override
public {{className ../name}} {{identifier name}}({{{nativeType}}} {{identifier name}}) {
	set{{capitalize (identifier name)}}({{identifier name}});
	return this;
}

{{/each}}
{{#each properties}}
/**
 {{#if description}}
 * {{description}}
 {{/if}}
 {{#if schema.minimum}}
 * minimum: {{schema.minimum}}
 {{/if}}
 {{#if schema.maximum}}
 * maximum: {{schema.maximum}}
 {{/if}}
 */
{{#if deprecated}}
@java.lang.Deprecated
{{/if}}
public {{className ../name}} {{identifier name}}({{{nativeType}}} {{identifier name}}) {
	set{{capitalize (identifier name)}}({{identifier name}});
	return this;
}

{{#if deprecated}}
@java.lang.Deprecated
{{/if}}
{{#if (lookup schema.vendorExtensions 'x-extra-annotation')}}
{{{schema.vendorExtensions.x-extra-annotation}}}
{{/if}}
{{>hooks/pojoPropertyAnnotations}}
@com.fasterxml.jackson.annotation.JsonProperty("{{name}}")
{{#if @root.useBeanValidation}}
{{>beanValidation}}
{{/if}}
public {{{nativeType}}} {{#and (isBoolean) required}}is{{else}}get{{/and}}{{capitalize (identifier name)}}() {
	return this.{{identifier name}};
}
{{#if deprecated}}
@java.lang.Deprecated
{{/if}}
public void set{{capitalize (identifier name)}}({{{nativeType}}} {{identifier name}}) {
	this.{{identifier name}} = {{identifier name}};
	{{#if (lookup ../vendorExtensions 'x-patch')}}
	this.__patched{{capitalize (identifier name)}} = true;
	{{/if}}
}
{{#if (lookup ../vendorExtensions 'x-patch')}}
public boolean patched{{capitalize (identifier name)}}() {
	return this.__patched{{capitalize (identifier name)}};
}
{{/if}}
{{#if (isArray)}}
public void add{{capitalize (singular (identifier name))}}({{{componentSchema.nativeType}}} {{identifier (singular name)}}) {
	if (this.{{identifier name}} == null) {
		this.{{identifier name}} = new {{{nativeType.concreteType}}}();
	}
	this.{{identifier name}}.add({{identifier (singular name)}});
	{{#if (lookup ../vendorExtensions 'x-patch')}}
	this.__patched{{capitalize (identifier name)}} = true;
	{{/if}}
}
{{/if}}

{{/each}}
{{/if}}
@Override
public boolean equals(java.lang.Object o) {
	if (this == o) {
		return true;
	}
	if (o == null || getClass() != o.getClass()) {
		return false;
	}
	{{#if parentNativeType}}
	if (!super.equals(o)) {
		return false;
	}
	{{/if}}
	{{#if properties}}
	{{className name}} {{identifier name}} = ({{className name}}) o;
	return {{#each properties}}java.util.Objects.equals(this.{{identifier name}}, {{identifier ../name}}.{{identifier name}}){{#hasMore}} &&
			{{/hasMore}}{{/each}};
	{{else}}
	return true;
	{{/if}}
}

@Override
public int hashCode() {
	return {{#if parentNativeType}}31 * super.hashCode() + {{/if}}java.util.Objects.hash({{#each properties}}this.{{identifier name}}{{#hasMore}}, {{/hasMore}}{{/each}});
}

@Override
public String toString() {
	StringBuilder sb = new StringBuilder();
	sb.append("class {{className name}} {\n");
	{{#if parentNativeType}}sb.append("    ").append(toIndentedString(super.toString())).append("\n");{{/if}}
	{{#each properties}}sb.append("    {{identifier name}}: ").append(toIndentedString(this.{{identifier name}})).append("\n");
	{{/each}}sb.append("}");
	return sb.toString();
}

/**
 * Convert the given object to string with each line indented by 4 spaces
 * (except the first line).
 */
private String toIndentedString(java.lang.Object o) {
	if (o == null) {
		return "null";
	}
	return o.toString().replace("\n", "\n    ");
}

