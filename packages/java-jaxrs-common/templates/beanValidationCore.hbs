{{#if pattern}}
@javax.validation.constraints.Pattern(regexp={{{stringLiteral pattern}}}{{#if vendorExtensions.x-pattern-message}}, message="{{{vendorExtensions.x-pattern-message}}}"{{/if}})
{{/if}}
{{!
minLength && maxLength set
}}
{{#if minLength}}
{{#if maxLength}}
@javax.validation.constraints.Size(min={{minLength}},max={{maxLength}}{{#if vendorExtensions.x-length-message}}, message="{{{vendorExtensions.x-length-message}}}"{{/if}})
{{/if}}
{{/if}}
{{!
minLength set, maxLength not
}}
{{#if minLength}}
{{#unless maxLength}}
@javax.validation.constraints.Size(min={{minLength}}{{#if vendorExtensions.x-length-message}}, message="{{{vendorExtensions.x-length-message}}}"{{/if}})
{{/unless}}
{{/if}}
{{!
minLength not set, maxLength set
}}
{{#unless minLength}}
{{#if maxLength}}
@javax.validation.constraints.Size(max={{maxLength}}{{#if vendorExtensions.x-length-message}}, message="{{{vendorExtensions.x-length-message}}}"{{/if}})
{{/if}}
{{/unless}}
{{!
@Size: minItems && maxItems set 
}}
{{#if minItems}}
{{#if maxItems}}
@javax.validation.constraints.Size(min={{minItems}},max={{maxItems}}{{#if vendorExtensions.x-length-message}}, message="{{{vendorExtensions.x-length-message}}}"{{/if}})
{{/if}}
{{/if}}
{{!
@Size: minItems set, maxItems not 
}}
{{#if minItems}}
{{#unless maxItems}}
@javax.validation.constraints.Size(min={{minItems}}{{#if vendorExtensions.x-length-message}}, message="{{{vendorExtensions.x-length-message}}}"{{/if}})
{{/unless}}
{{/if}}
{{!
@Size: minItems not set && maxItems set 
}}
{{#unless minItems}}
{{#if maxItems}}
@javax.validation.constraints.Size(max={{maxItems}}{{#if vendorExtensions.x-length-message}}, message="{{{vendorExtensions.x-length-message}}}"{{/if}})
{{/if}}
{{/unless}}
{{! 
check for integer or long / all others=decimal type with @Decimal*
isInteger set
}}
{{#if (isNumber)}}
{{#if minimum}}
@javax.validation.constraints.Min({{minimum}}{{#if vendorExtensions.x-minimum-message}}, message="{{{vendorExtensions.x-minimum-message}}}"{{/if}})
{{/if}}
{{#if maximum}}
@javax.validation.constraints.Max({{maximum}}{{#if vendorExtensions.x-maximum-message}}, message="{{{vendorExtensions.x-maximum-message}}}"{{/if}})
{{/if}}
{{/if}}
{{!
Not Integer, not Long => we have a decimal value!
}}
{{#unless (isNumber)}}
{{#if minimum}}
@javax.validation.constraints.DecimalMin("{{minimum}}"{{#if vendorExtensions.x-minimum-message}}, message="{{{vendorExtensions.x-minimum-message}}}"{{/if}})
{{/if}}
{{#if maximum}}
@javax.validation.constraints.DecimalMax("{{maximum}}"{{#if vendorExtensions.x-maximum-message}}, message="{{{vendorExtensions.x-maximum-message}}}"{{/if}})
{{/if}}
{{/unless}}
{{!
Email addresses
}}
{{#ifeq format 'email'}}
@javax.validation.constraints.Email{{#if vendorExtensions.x-email-message}}(message="{{{vendorExtensions.x-email-message}}}"){{/if}}
{{else if vendorExtensions.x-email}}
@javax.validation.constraints.Email{{#if vendorExtensions.x-email-message}}(message="{{{vendorExtensions.x-email-message}}}"){{/if}}
{{/ifeq}}
{{!
Not blank
}}
{{#if vendorExtensions.x-not-blank}}
@javax.validation.constraints.NotBlank{{#if vendorExtensions.x-not-blank-message}}(message="{{{vendorExtensions.x-not-blank-message}}}"){{/if}}
{{/if}}
{{!
Not empty
}}
{{#if vendorExtensions.x-not-empty}}
@javax.validation.constraints.NotEmpty{{#if vendorExtensions.x-not-empty-message}}(message="{{{vendorExtensions.x-not-empty-message}}}"){{/if}}
{{/if}}
