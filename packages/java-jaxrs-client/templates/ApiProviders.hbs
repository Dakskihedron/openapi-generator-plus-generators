package {{apiPackage}};

public interface ApiProviders {

	static java.util.List<?> defaultProviders() {
		java.util.List<Object> result = new java.util.ArrayList<>();
		result.add(new MyJacksonJaxbJsonProvider());
		return result;
	}

	class MyJacksonJaxbJsonProvider extends com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider {

		public MyJacksonJaxbJsonProvider() {
			super();

			final com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper();

			/* Support PATCH requests, since we need to NOT serialise the values we're not trying to patch */
			mapper.setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL);

			/* Support Java time object types */
			mapper.registerModule(new com.fasterxml.jackson.datatype.jsr310.JavaTimeModule());
			mapper.configure(com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);

			/* Ignore unknown properties received from the server */
			mapper.configure(com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
			setMapper(mapper);
		}

	}

}
