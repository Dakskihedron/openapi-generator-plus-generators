{{!--  
@param value the expression containing the value
@param separator the separator string to use if we need to join multiple values
@param indent a string to indent multiline results
--}}
{{#indent indent}}
{{#if (isDateTime)}}
{{#ifeq @root.dateApproach 'native'}}
dateToString({{{value}}})
{{~else}}
String({{{value}}})
{{~/ifeq}}
{{~else or (isDate) (isTime)}}
String({{{value}}})
{{~else if (isObject)}}
[
{{#each (allProperties schema)}}
{{{../value}}}["{{serializedName}}"] !== undefined ? {{{../value}}}["{{serializedName}}"] !== null ? `{{serializedName}},{{safe '${'}}{{>frag/schemaToString value=(concat ../value '["' serializedName '"]') separator=../separator indent=../indent}}{{safe '}'}}` : '{{serializedName}},' : undefined{{#hasMore}},{{/hasMore}}{{safe ' '}}
{{/each}}
].filter(localVarObjectElement => localVarObjectElement !== undefined).join('{{separator}}')
{{~else if (isArray)}}
{{{value}}}.map(localVarArrayMapElement => {{>frag/schemaToString component value='localVarArrayMapElement' separator=separator indent=indent}}).join('{{separator}}')
{{~else}}
String({{{value}}})
{{~/if~}}
{{/indent}}
